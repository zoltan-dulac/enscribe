{
  "version": 3,
  "sources": ["../es6/enscribe.js", "../es6/enscribe-youtube.js"],
  "sourcesContent": ["/* enscribe.js \u2014 ES module core */\n\nconst en = {\n    players: new Map(),\n    mods: new Map(),     // type -> module (html5|vimeo|youtube|\u2026)\n    urls: new Map(),     // type -> absolute URL to plugin file\n    ready: false\n  };\n  \n  // Base-path from this file\n  const isES6Module = !(document.currentScript);\n  console.log('es6mod', isES6Module);\n  const baseURL = new URL('.', isES6Module ? import.meta.url : location.origin + location.pathname.replace(/\\/[^/]*$/, '/') + enableRootDir);\n  console.log('url', baseURL);\n  // Default URL resolver: ./enscribe-${type}.js next to enscribe.js\n  const defaultURLFor = (type) => new URL(`./enscribe-${type}.js`, baseURL).href;\n  \n  // Public: allow apps to override plugin URL mapping\n  export function setPluginURL(type, url) {\n    en.urls.set(type, new URL(url, baseURL).href);\n  }\n  \n  // Public: register a plugin module {setup, control, getVolume, setVolume, updateSource, ...}\n  export function register(type, mod) {\n    en.mods.set(type, mod);\n  }\n  \n  // Helpers used by plugins\n  export function htmlToText(html) {\n    const d = document.createElement('div');\n    d.appendChild(html.cloneNode(true));\n    return d.textContent || '';\n  }\n  \n  export function getCueData(cue) {\n    const h = cue.getCueAsHTML();\n    return { content: htmlToText(h), pause: !!h.querySelector('span.pause') };\n  }\n  \n  // Speak + (optional) pause/duck\n  export async function speak(content, pause, player) {\n    const mod = en.mods.get(player.type);\n    if (!mod) return;\n  \n    const u = new SpeechSynthesisUtterance(content);\n    if (mod.getVolume) u.volume = await mod.getVolume(player);\n  \n    const el = player.element;\n    const shouldPause = pause || el.hasAttribute('data-ad-global-pause');\n    const duckAttr = el.getAttribute('data-ad-ducking');\n    const shouldDuck = !shouldPause && duckAttr != null;\n    let prev;\n  \n    if (shouldDuck && mod.getVolume && mod.setVolume) {\n      prev = await mod.getVolume(player);\n      await mod.setVolume(player, +duckAttr || 0.25);\n    }\n  \n    player.ADPlaying = true;\n    speechSynthesis.speak(u);\n    if (shouldPause && mod.control) mod.control(player, 'pause');\n  \n    u.onend = async () => {\n      if (shouldPause && mod.control) mod.control(player, 'play');\n      if (shouldDuck && mod.setVolume) await mod.setVolume(player, prev);\n      setTimeout(() => (player.ADPlaying = false), 100);\n    };\n  }\n  \n  // Utility: script loader (rarely needed now that we use import(); still here if you want it)\n  export function loadScript(src) {\n    return new Promise((r) => {\n      const s = document.createElement('script');\n      s.onload = r;\n      s.src = src;\n      document.head.appendChild(s);\n    });\n  }\n  \n  // Dynamic import for a given type\n  async function ensure(type) {\n    if (en.mods.has(type)) return;\n    const url = en.urls.get(type) || defaultURLFor(type);\n    const mod = await import(url);\n    // plugin can either default-export the module object or export {plugin}\n    register(type, mod.default || mod.plugin || mod);\n  }\n  \n  // Map DOM -> players\n  export function createPlayerMappings() {\n    document.querySelectorAll('[data-AD-player]').forEach((el) => {\n      const type = el.dataset.adPlayerType;\n      let standardSource = el.querySelector('source')?.src || el.src;\n      if (type === 'youtube') {\n        const m = /embed\\/([^?]+)/.exec(el.src);\n        standardSource = m ? m[1] : '';\n      }\n      en.players.set(el.id, {\n        element: el,\n        type,\n        standardSource,\n        ADSource: el.dataset.adVideoSource,\n        enabled: false,\n        ADPlaying: false,\n      });\n    });\n  }\n  \n  // Public: let apps manually toggle a player by id\n  export function setEnabled(playerId, enabled) {\n    const p = en.players.get(playerId);\n    if (!p) return;\n    p.enabled = enabled;\n    const mod = en.mods.get(p.type);\n    if (p.type === 'html5' && mod?.setHTML5TrackMode) mod.setHTML5TrackMode(p);\n  }\n  \n  // Hook up UI buttons\n  export function setupToggleButtons() {\n    document.querySelectorAll('[data-AD-button]').forEach((btn) => {\n      btn.addEventListener('click', async (e) => {\n        const el = e.currentTarget;\n        const p = en.players.get(el.dataset.adAssociatedPlayer);\n        if (!p) return;\n        p.enabled = !p.enabled;\n        el.classList.toggle('active');\n        el.setAttribute('aria-label', `Turn ${p.enabled ? 'off' : 'on'} audio descriptions`);\n        const mod = en.mods.get(p.type);\n        if (p.ADSource && mod?.updateSource) {\n          await mod.updateSource(p, p.enabled ? 'AD' : 'standard');\n        } else if (p.type === 'html5' && mod?.setHTML5TrackMode) {\n          mod.setHTML5TrackMode(p);\n        }\n      });\n    });\n  }\n  \n  // Public: initialize everything (dynamic plugin loading by type)\n  export async function init() {\n    console.log('init'); \n    if (en.ready) return;\n    en.ready = true;\n  \n    createPlayerMappings();\n  \n    // Load & setup each player\u2019s plugin\n    for (const p of en.players.values()) {\n      await ensure(p.type);\n      const mod = en.mods.get(p.type);\n      if (mod?.setup) await mod.setup(p, { speak, getCueData });\n    }\n  \n    setupToggleButtons();\n  }\n\n  init();\n  ", "// enscribe-youtube.js\nimport { register, getCueData, speak } from './enscribe.js';\n\nlet ytReady;\nfunction loadYT() {\n  if (ytReady) return ytReady;\n  ytReady = new Promise((res) => {\n    window.onYouTubeIframeAPIReady = res;\n    const s = document.createElement('script');\n    s.src = 'https://www.youtube.com/iframe_api';\n    document.head.appendChild(s);\n  });\n  return ytReady;\n}\n\nconst mod = {\n  getVolume: (p) => Promise.resolve(p.youtube.getVolume() / 100),\n  setVolume: (p, v) => p.youtube.setVolume(Math.round(v * 100)),\n  control: (p, action) => p.youtube[action + 'Video'](),\n\n  async updateSource(p, which) {\n    const id = which === 'AD' ? p.ADSource : p.standardSource;\n    const cur = p.youtube.getCurrentTime();\n    const paused = p.youtube.getPlayerState() === 2;\n    p.youtube.loadVideoById(id, cur);\n    const poll = setInterval(() => {\n      if (p.youtube.getPlayerState() === -1) {\n        paused ? p.youtube.pauseVideo() : p.youtube.playVideo();\n        clearInterval(poll);\n      }\n    }, 100);\n  },\n\n  async setup(p) {\n    // If not using an alternate AD video, build a proxy descriptions track\n    if (!p.element.dataset.adVideoSource) {\n      const v = document.createElement('video');\n      const t = Object.assign(document.createElement('track'), {\n        kind: 'descriptions', label: 'Audio Descriptions', srclang: 'en',\n        src: p.element.dataset.adPlayerVttPath\n      });\n      v.appendChild(t);\n      const tt = v.textTracks[0];\n      tt.mode = 'hidden';\n      t.addEventListener('load', () => { p.ADTrack = tt; }, { once: true });\n      document.body.appendChild(v);\n    }\n\n    await loadYT();\n    p.youtube = new YT.Player(p.element.id, {\n      events: {\n        onStateChange: (e) => {\n          if (e.data !== YT.PlayerState.UNSTARTED && !p._pollStarted && !p.element.dataset.adVideoSource) {\n            p._pollStarted = true;\n            const tick = () => {\n              if (!p.enabled || p.ADPlaying || !p.youtube?.getCurrentTime) return;\n              const now = p.youtube.getCurrentTime();\n              if (p._lastTime != null && now < p._lastTime - 0.2) p._recentCue = undefined;\n              p._lastTime = now;\n              for (const c of p.ADTrack.cues) {\n                if (p._recentCue === c.startTime) continue;\n                if (Math.abs(now - c.startTime) <= 0.1) {\n                  p._recentCue = c.startTime;\n                  return speak(...Object.values(getCueData(c)), p);\n                }\n              }\n            };\n            p._ytInterval = setInterval(tick, 100);\n          }\n        }\n      }\n    });\n  }\n};\n\nregister('youtube', mod);\nexport default mod;\n"],
  "mappings": ";AAEA,IAAM,KAAK;AAAA,EACP,SAAS,oBAAI,IAAI;AAAA,EACjB,MAAM,oBAAI,IAAI;AAAA;AAAA,EACd,MAAM,oBAAI,IAAI;AAAA;AAAA,EACd,OAAO;AACT;AAGA,IAAM,cAAc,CAAE,SAAS;AAC/B,QAAQ,IAAI,UAAU,WAAW;AACjC,IAAM,UAAU,IAAI,IAAI,KAAK,cAAc,YAAY,MAAM,SAAS,SAAS,SAAS,SAAS,QAAQ,YAAY,GAAG,IAAI,aAAa;AACzI,QAAQ,IAAI,OAAO,OAAO;AAE1B,IAAM,gBAAgB,CAAC,SAAS,IAAI,IAAI,cAAc,IAAI,OAAO,OAAO,EAAE;AAQnE,SAAS,SAAS,MAAMA,MAAK;AAClC,KAAG,KAAK,IAAI,MAAMA,IAAG;AACvB;AAGO,SAAS,WAAW,MAAM;AAC/B,QAAM,IAAI,SAAS,cAAc,KAAK;AACtC,IAAE,YAAY,KAAK,UAAU,IAAI,CAAC;AAClC,SAAO,EAAE,eAAe;AAC1B;AAEO,SAAS,WAAW,KAAK;AAC9B,QAAM,IAAI,IAAI,aAAa;AAC3B,SAAO,EAAE,SAAS,WAAW,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,cAAc,YAAY,EAAE;AAC1E;AAGA,eAAsB,MAAM,SAAS,OAAO,QAAQ;AAClD,QAAMA,OAAM,GAAG,KAAK,IAAI,OAAO,IAAI;AACnC,MAAI,CAACA,KAAK;AAEV,QAAM,IAAI,IAAI,yBAAyB,OAAO;AAC9C,MAAIA,KAAI,UAAW,GAAE,SAAS,MAAMA,KAAI,UAAU,MAAM;AAExD,QAAM,KAAK,OAAO;AAClB,QAAM,cAAc,SAAS,GAAG,aAAa,sBAAsB;AACnE,QAAM,WAAW,GAAG,aAAa,iBAAiB;AAClD,QAAM,aAAa,CAAC,eAAe,YAAY;AAC/C,MAAI;AAEJ,MAAI,cAAcA,KAAI,aAAaA,KAAI,WAAW;AAChD,WAAO,MAAMA,KAAI,UAAU,MAAM;AACjC,UAAMA,KAAI,UAAU,QAAQ,CAAC,YAAY,IAAI;AAAA,EAC/C;AAEA,SAAO,YAAY;AACnB,kBAAgB,MAAM,CAAC;AACvB,MAAI,eAAeA,KAAI,QAAS,CAAAA,KAAI,QAAQ,QAAQ,OAAO;AAE3D,IAAE,QAAQ,YAAY;AACpB,QAAI,eAAeA,KAAI,QAAS,CAAAA,KAAI,QAAQ,QAAQ,MAAM;AAC1D,QAAI,cAAcA,KAAI,UAAW,OAAMA,KAAI,UAAU,QAAQ,IAAI;AACjE,eAAW,MAAO,OAAO,YAAY,OAAQ,GAAG;AAAA,EAClD;AACF;AAaA,eAAe,OAAO,MAAM;AAC1B,MAAI,GAAG,KAAK,IAAI,IAAI,EAAG;AACvB,QAAM,MAAM,GAAG,KAAK,IAAI,IAAI,KAAK,cAAc,IAAI;AACnD,QAAMC,OAAM,MAAM,OAAO;AAEzB,WAAS,MAAMA,KAAI,WAAWA,KAAI,UAAUA,IAAG;AACjD;AAGO,SAAS,uBAAuB;AACrC,WAAS,iBAAiB,kBAAkB,EAAE,QAAQ,CAAC,OAAO;AAC5D,UAAM,OAAO,GAAG,QAAQ;AACxB,QAAI,iBAAiB,GAAG,cAAc,QAAQ,GAAG,OAAO,GAAG;AAC3D,QAAI,SAAS,WAAW;AACtB,YAAM,IAAI,iBAAiB,KAAK,GAAG,GAAG;AACtC,uBAAiB,IAAI,EAAE,CAAC,IAAI;AAAA,IAC9B;AACA,OAAG,QAAQ,IAAI,GAAG,IAAI;AAAA,MACpB,SAAS;AAAA,MACT;AAAA,MACA;AAAA,MACA,UAAU,GAAG,QAAQ;AAAA,MACrB,SAAS;AAAA,MACT,WAAW;AAAA,IACb,CAAC;AAAA,EACH,CAAC;AACH;AAYO,SAAS,qBAAqB;AACnC,WAAS,iBAAiB,kBAAkB,EAAE,QAAQ,CAAC,QAAQ;AAC7D,QAAI,iBAAiB,SAAS,OAAO,MAAM;AACzC,YAAM,KAAK,EAAE;AACb,YAAM,IAAI,GAAG,QAAQ,IAAI,GAAG,QAAQ,kBAAkB;AACtD,UAAI,CAAC,EAAG;AACR,QAAE,UAAU,CAAC,EAAE;AACf,SAAG,UAAU,OAAO,QAAQ;AAC5B,SAAG,aAAa,cAAc,QAAQ,EAAE,UAAU,QAAQ,IAAI,qBAAqB;AACnF,YAAMC,OAAM,GAAG,KAAK,IAAI,EAAE,IAAI;AAC9B,UAAI,EAAE,YAAYA,MAAK,cAAc;AACnC,cAAMA,KAAI,aAAa,GAAG,EAAE,UAAU,OAAO,UAAU;AAAA,MACzD,WAAW,EAAE,SAAS,WAAWA,MAAK,mBAAmB;AACvD,QAAAA,KAAI,kBAAkB,CAAC;AAAA,MACzB;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AACH;AAGA,eAAsB,OAAO;AAC3B,UAAQ,IAAI,MAAM;AAClB,MAAI,GAAG,MAAO;AACd,KAAG,QAAQ;AAEX,uBAAqB;AAGrB,aAAW,KAAK,GAAG,QAAQ,OAAO,GAAG;AACnC,UAAM,OAAO,EAAE,IAAI;AACnB,UAAMA,OAAM,GAAG,KAAK,IAAI,EAAE,IAAI;AAC9B,QAAIA,MAAK,MAAO,OAAMA,KAAI,MAAM,GAAG,EAAE,OAAO,WAAW,CAAC;AAAA,EAC1D;AAEA,qBAAmB;AACrB;AAEA,KAAK;;;ACxJP,IAAI;AACJ,SAAS,SAAS;AAChB,MAAI,QAAS,QAAO;AACpB,YAAU,IAAI,QAAQ,CAAC,QAAQ;AAC7B,WAAO,0BAA0B;AACjC,UAAM,IAAI,SAAS,cAAc,QAAQ;AACzC,MAAE,MAAM;AACR,aAAS,KAAK,YAAY,CAAC;AAAA,EAC7B,CAAC;AACD,SAAO;AACT;AAEA,IAAM,MAAM;AAAA,EACV,WAAW,CAAC,MAAM,QAAQ,QAAQ,EAAE,QAAQ,UAAU,IAAI,GAAG;AAAA,EAC7D,WAAW,CAAC,GAAG,MAAM,EAAE,QAAQ,UAAU,KAAK,MAAM,IAAI,GAAG,CAAC;AAAA,EAC5D,SAAS,CAAC,GAAG,WAAW,EAAE,QAAQ,SAAS,OAAO,EAAE;AAAA,EAEpD,MAAM,aAAa,GAAG,OAAO;AAC3B,UAAM,KAAK,UAAU,OAAO,EAAE,WAAW,EAAE;AAC3C,UAAM,MAAM,EAAE,QAAQ,eAAe;AACrC,UAAM,SAAS,EAAE,QAAQ,eAAe,MAAM;AAC9C,MAAE,QAAQ,cAAc,IAAI,GAAG;AAC/B,UAAM,OAAO,YAAY,MAAM;AAC7B,UAAI,EAAE,QAAQ,eAAe,MAAM,IAAI;AACrC,iBAAS,EAAE,QAAQ,WAAW,IAAI,EAAE,QAAQ,UAAU;AACtD,sBAAc,IAAI;AAAA,MACpB;AAAA,IACF,GAAG,GAAG;AAAA,EACR;AAAA,EAEA,MAAM,MAAM,GAAG;AAEb,QAAI,CAAC,EAAE,QAAQ,QAAQ,eAAe;AACpC,YAAM,IAAI,SAAS,cAAc,OAAO;AACxC,YAAM,IAAI,OAAO,OAAO,SAAS,cAAc,OAAO,GAAG;AAAA,QACvD,MAAM;AAAA,QAAgB,OAAO;AAAA,QAAsB,SAAS;AAAA,QAC5D,KAAK,EAAE,QAAQ,QAAQ;AAAA,MACzB,CAAC;AACD,QAAE,YAAY,CAAC;AACf,YAAM,KAAK,EAAE,WAAW,CAAC;AACzB,SAAG,OAAO;AACV,QAAE,iBAAiB,QAAQ,MAAM;AAAE,UAAE,UAAU;AAAA,MAAI,GAAG,EAAE,MAAM,KAAK,CAAC;AACpE,eAAS,KAAK,YAAY,CAAC;AAAA,IAC7B;AAEA,UAAM,OAAO;AACb,MAAE,UAAU,IAAI,GAAG,OAAO,EAAE,QAAQ,IAAI;AAAA,MACtC,QAAQ;AAAA,QACN,eAAe,CAAC,MAAM;AACpB,cAAI,EAAE,SAAS,GAAG,YAAY,aAAa,CAAC,EAAE,gBAAgB,CAAC,EAAE,QAAQ,QAAQ,eAAe;AAC9F,cAAE,eAAe;AACjB,kBAAM,OAAO,MAAM;AACjB,kBAAI,CAAC,EAAE,WAAW,EAAE,aAAa,CAAC,EAAE,SAAS,eAAgB;AAC7D,oBAAM,MAAM,EAAE,QAAQ,eAAe;AACrC,kBAAI,EAAE,aAAa,QAAQ,MAAM,EAAE,YAAY,IAAK,GAAE,aAAa;AACnE,gBAAE,YAAY;AACd,yBAAW,KAAK,EAAE,QAAQ,MAAM;AAC9B,oBAAI,EAAE,eAAe,EAAE,UAAW;AAClC,oBAAI,KAAK,IAAI,MAAM,EAAE,SAAS,KAAK,KAAK;AACtC,oBAAE,aAAa,EAAE;AACjB,yBAAO,MAAM,GAAG,OAAO,OAAO,WAAW,CAAC,CAAC,GAAG,CAAC;AAAA,gBACjD;AAAA,cACF;AAAA,YACF;AACA,cAAE,cAAc,YAAY,MAAM,GAAG;AAAA,UACvC;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAEA,SAAS,WAAW,GAAG;AACvB,IAAO,2BAAQ;",
  "names": ["mod", "mod", "mod"]
}
